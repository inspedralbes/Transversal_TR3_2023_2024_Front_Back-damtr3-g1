{"version":3,"file":"components/graph-monto-gastado.js","sources":["webpack:///./services/communicationsManager.js","webpack:///./components/GraphMontoGastado.vue","webpack:///./components/GraphMontoGastado.vue?2c9b","webpack:///./components/GraphMontoGastado.vue?aa3f"],"sourcesContent":["//r6pixel.duckdns.org\r\nexport async function login(user, pwd) {\r\n    const response = await fetch(`http://r6pixel.duckdns.org:3170/loginWeb`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ \"user\": user, \"pwd\": pwd }),\r\n    });\r\n    const resultat = await response.json();\r\n    return resultat.auth;\r\n}\r\n\r\nexport async function createMap(map) {\r\n    const response = await fetch(`http://r6pixel.duckdns.org:3170/mapa`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(map),\r\n    });\r\n    const resultat = await response.text();\r\n    const boolValue = resultat === \"true\";\r\n    return boolValue;\r\n}\r\n\r\nexport async function createBroadcastNews(news) {\r\n    const response = await fetch(`http://r6pixel.duckdns.org:3170/createBroadcastNews`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(news),\r\n    });\r\n    const resultat = await response.text();\r\n    const boolValue = resultat === \"true\";\r\n    return boolValue;\r\n}\r\n\r\nexport async function createPersonaje(personaje) {\r\n    const response = await fetch(`http://r6pixel.duckdns.org:3170/personaje`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(personaje),\r\n    });\r\n    const resultat = await response.text();\r\n    const boolValue = resultat === \"true\";\r\n    return boolValue;\r\n}\r\n\r\nexport async function arma(arma) {\r\n    const response = await fetch(`http://r6pixel.duckdns.org:3170/arma`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(arma),\r\n    });\r\n    const resultat = await response.text();\r\n    const boolValue = resultat === \"true\";\r\n    return boolValue;\r\n}\r\n\r\nexport async function crearSkin(skin) {\r\n    const response = await fetch(`http://r6pixel.duckdns.org:3170/skin`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(skin),\r\n    });\r\n    const resultat = await response.text();\r\n    const boolValue = resultat === \"true\";\r\n    return boolValue;\r\n}\r\n\r\nexport async function deleteMap(id) {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/deletemapa/${id}`, {\r\n            method: 'DELETE',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        });\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al borrar el mapa');\r\n    }\r\n}\r\n\r\nexport async function deletePersonaje(id) {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/deletepersonaje/${id}`, {\r\n            method: 'DELETE',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        });\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al borrar el personaje');\r\n    }\r\n}\r\n\r\nexport async function deleteArma(id) {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/deletearma/${id}`, {\r\n            method: 'DELETE',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        });\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al borrar la arma');\r\n    }\r\n}\r\n\r\nexport async function deleteSkin(id) {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/deleteskin/${id}`, {\r\n            method: 'DELETE',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        });\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al borrar la skin');\r\n    }\r\n}\r\n\r\nexport async function deleteBroadcastNews(id) {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/deleteBroadcastNews/${id}`, {\r\n            method: 'DELETE',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        });\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al borrar la noticia');\r\n    }\r\n}\r\n\r\nexport async function updateMap(id, map) {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/updatemapa/${id}`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(map),\r\n        });\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al actualizar el mapa');\r\n    }\r\n}\r\n\r\nexport async function updatePersonaje(id, personaje) {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/updatepersonaje/${id}`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(personaje),\r\n        });\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al actualizar el personaje');\r\n    }\r\n}\r\n\r\nexport async function updateArma(id, arma) {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/updatearma/${id}`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(arma),\r\n        });\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al actualizar la arma');\r\n    }\r\n}\r\n\r\nexport async function updateSkin(id, skin) {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/updateskin/${id}`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(skin),\r\n        });\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al actualizar la skin');\r\n    }\r\n}\r\n\r\nexport async function updateBroadcastNews(id, news) {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/updateBroadcastNews/${id}`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(news),\r\n        });\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al actualizar las noticias');\r\n    }\r\n}\r\n\r\nexport async function getMapa() {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/getMapa`);\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al obtener el mapa');\r\n    }\r\n}\r\n\r\nexport async function getPersonaje() {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/getPersonaje`);\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al obtener el personaje');\r\n    }\r\n}\r\n\r\nexport async function getArma() {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/getArma`);\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al obtener la arma');\r\n    }\r\n}\r\n\r\nexport async function getSkin() {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/getSkin`);\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al obtener la skin');\r\n    }\r\n}\r\n\r\nexport async function getAssets() {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/getAssets`);\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al obtener los assets');\r\n    }\r\n}\r\n\r\nexport async function getBroadcastNews() {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/getBroadcastNews`);\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al obtener Broadcast News');\r\n    }\r\n}\r\n\r\nexport async function uploadMapimg(imageFile) {\r\n    try {\r\n        let formData = new FormData();\r\n        formData.append('image', imageFile);\r\n\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/uploadMap`, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al subir la imagen al mapa');\r\n    }\r\n}\r\n\r\nexport async function uploadSkinimg(imageFile) {\r\n    try {\r\n        let formData = new FormData();\r\n        formData.append('image', imageFile);\r\n\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/uploadSkin`, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al subir la imagen de la skin');\r\n    }\r\n}\r\n\r\nexport async function uploadBroadcastImg(imageFile) {\r\n    try {\r\n        let formData = new FormData();\r\n        formData.append('image', imageFile);\r\n\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/uploadBroadcast`, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al subir la imagen de la skin');\r\n    }\r\n}\r\n\r\nexport async function editMapimg(imageFile, oldImageName) {\r\n    try {\r\n        let formData = new FormData();\r\n        formData.append('image', imageFile);\r\n        formData.append('oldImageName', oldImageName);\r\n\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/editMap`, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al subir la nueva imagen o eliminar la antigua');\r\n    }\r\n}\r\n\r\nexport async function editSkinimg(imageFile, oldImageName) {\r\n    try {\r\n        let formData = new FormData();\r\n        formData.append('image', imageFile);\r\n        formData.append('oldImageName', oldImageName);\r\n\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/editSkin`, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al subir la nueva imagen o eliminar la antigua');\r\n    }\r\n}\r\n\r\nexport async function editBroadcastimg(imageFile, oldImageName) {\r\n    try {\r\n        let formData = new FormData();\r\n        formData.append('image', imageFile);\r\n        formData.append('oldImageName', oldImageName);\r\n\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/editBroadcast`, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al subir la nueva imagen o eliminar la antigua');\r\n    }\r\n}\r\n\r\n// SELECT LOS USUARIOS\r\nexport async function getUsuarios() {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/getUsuarios`);\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al obtener usuarios');\r\n    }\r\n}\r\n\r\n// SELECT A LAS ESTADISTICAS DE LOS USUARIOS\r\nexport async function getEstadisticas(id) {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/getEstadisticas/${id}`, {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        });\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al actualizar las estadisticas');\r\n    }\r\n}\r\n\r\n// SELECT A LOS BENEFICIOS\r\nexport async function getBeneficios() {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/getCompras`, {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        });\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al actualizar los beneficios');\r\n    }\r\n}\r\n\r\n// UPDATE CLIENTES\r\nexport async function updateCliente(datosActualizadosCliente) {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/updateCliente`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(datosActualizadosCliente)\r\n        });\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al actualizar el cliente');\r\n    }\r\n}\r\n\r\n// DETENER SERVER ODOO\r\nexport async function detenerOdoo() {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/detenerOdoo`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error('Error al detener Odoo');\r\n        }\r\n        alert('Odoo y db detenidas correctamente.');\r\n    } catch (error) {\r\n        console.error('Error al detener Odoo:', error);\r\n        alert('Error al detener Odoo.');\r\n    }\r\n}\r\n\r\n// ARRANCAR SERVER ODOO\r\nexport async function arrancarOdoo() {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/arrancarOdoo`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error('Error al arrancar Odoo');\r\n        }\r\n        alert('Odoo y db arrancar correctamente.');\r\n    } catch (error) {\r\n        console.error('Error al arrancar Odoo:', error);\r\n        alert('Error al arrancar Odoo.');\r\n    }\r\n}\r\n\r\n// VER ESTADO ODOO\r\nexport async function getOdooStatus() {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/checkarOdoo`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        });\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al obtener el estado de Odoo');\r\n    }\r\n}\r\n\r\n// VER ESTADO game server\r\nexport async function getGameStatus() {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/checkarGame`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        });\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al obtener el estado de game');\r\n    }\r\n}\r\n\r\nexport async function detenerGame() {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/detenerGame`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error('Error al detener Game');\r\n        }\r\n        alert('Game detenido correctamente.');\r\n    } catch (error) {\r\n        console.error('Error al detener game:', error);\r\n        alert('Error al detener game.');\r\n    }\r\n}\r\n\r\n// ARRANCAR SERVER Game\r\nexport async function arrancarGame() {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/arrancarGame`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error('Error al arrancar game');\r\n        }\r\n        alert('game arrancar correctamente.');\r\n    } catch (error) {\r\n        console.error('Error al arrancar game:', error);\r\n        alert('Error al arrancar game.');\r\n    }\r\n}\r\n\r\nexport async function syncOdoo() {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/syncOdoo`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        });\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al sincronizar Odoo');\r\n    }\r\n}\r\n\r\n// SYNC CLIENTES ODOO\r\nexport async function syncOdooClient() {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/syncClientOdoo\r\n        `, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        });\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al sincronizar Odoo');\r\n    }\r\n}\r\n\r\nexport async function getImg(path) {\r\n    try {\r\n        // console.log(\"Haciendo solicitud a:\", `http://r6pixel.duckdns.org:3170/getImgBroadcast/${path}`);\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/getImgBroadcast/${path}`);\r\n        //console.log(\"Respuesta de la solicitud:\", response);\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        return response.url;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al obtener la imagen');\r\n    }\r\n}\r\n\r\nexport async function getImgGraph() {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/getImgGraph`);\r\n        //console.log(\"Respuesta de la solicitud:\", response);\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        return response.url;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al obtener la imagen');\r\n    }\r\n}\r\n\r\nexport async function getImgGraphBeneficios() {\r\n    try {\r\n        const response = await fetch(`http://r6pixel.duckdns.org:3170/getImgGraphBenefits`);\r\n        //console.log(\"Respuesta de la solicitud:\", response);\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        return response.url;\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error('Error al obtener la imagen');\r\n    }\r\n}","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"p-2 border border-gray-500 mt-4 text-center\"},[_vm._ssrNode(\"<label class=\\\"block mb-2 font-bold\\\">Monto Total Gastado por Todos los Usuarios</label> \"),_c('client-only',[_c('BarChart',{attrs:{\"data\":_vm.chartData}})],1)],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../node_modules/babel-loader/lib/index.js??ref--2-0!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./GraphMontoGastado.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../node_modules/babel-loader/lib/index.js??ref--2-0!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./GraphMontoGastado.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./GraphMontoGastado.vue?vue&type=template&id=508b7dc4\"\nimport script from \"./GraphMontoGastado.vue?vue&type=script&lang=js\"\nexport * from \"./GraphMontoGastado.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  \"61ee588d\"\n  \n)\n\nexport default component.exports"],"mappingstmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}